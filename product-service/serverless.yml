service: product-service

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    CREATE_PRODUCT_SNS_TOPIC_ARN: !Ref createProductTopic
    PRODUCTS_TABLE: ${env:PRODUCTS_TABLE}
    STOCK_TABLE: ${env:STOCK_TABLE}
    ACCESS_ID: ${env:ACCESS_ID}
    SECRET: ${env:SECRET}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource: 
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:PRODUCTS_TABLE}
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:STOCK_TABLE}
    - Effect: 'Allow'
      Action: 'sns:*'
      Resource: 
        - Ref: createProductTopic

functions:
  getProductsList:
    handler: handler.getProductsList	
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductsById:
    handler: handler.getProductsById	
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct	
    events:
      - http:
          path: products
          method: post
          cors: true
    
  catalogBatchProcess:
    handler: handler.catalogBatchProcess	
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5

resources:
 Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalog-items-queue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties: 
        Subscription: 
          - Endpoint: acevedo.felipe201@gmail.com
            Protocol: email
        TopicName: create-product-topic

